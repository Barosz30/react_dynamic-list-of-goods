{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","_ref","goods","_jsx","children","map","good","style","color","name","id","getAll","fetch","then","response","json","App","_useState","useState","_useState2","_slicedToArray","setGoods","_useState3","_useState4","listType","setListType","useEffect","List","sort","a","b","localeCompare","slice","filter","handleClick","value","_jsxs","className","type","onClick","event","currentTarget","ReactDOM","render","document","getElementById"],"mappings":"wMAOaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,cAAA,MAAAC,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACbH,cAAA,MAAkB,UAAQ,OAAOI,MAAO,CAAEC,MAAOF,EAAKE,OAAQJ,SAC3DE,EAAKG,MADCH,EAAKI,GAET,KAEJ,ECTA,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GACrC,CAEO,ICCMC,EAAgB,WAC3B,IAAAC,EAA0BC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAAvCf,EAAKiB,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAAgCJ,mBAAmB,IAAGK,EAAAH,YAAAE,EAAA,GAA/CE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAE5BG,qBAAU,WACR,OAAQF,GACN,IAAM,MACJb,IAASE,MAAK,SAAAc,GACZN,EAASM,EACX,IACA,MAEF,IAAM,ODZHhB,IACJE,MAAK,SAAAX,GAAK,OAAIA,CAAK,IACnBW,MAAK,SAAAX,GACJ,OAAOA,EAAM0B,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEpB,KAAKsB,cAAcD,EAAErB,KAAK,IACrDuB,MAAM,EAAG,EACd,ICQgBnB,MAAK,SAAAc,GACfN,EAASM,EACX,IACA,MAEF,IAAM,MDTHhB,IACJE,MAAK,SAAAX,GAAK,OAAIA,CAAK,IACnBW,MAAK,SAAAX,GACJ,OAAOA,EAAM+B,QAAO,SAAA3B,GAAI,MAAmB,QAAfA,EAAKE,KAAe,GAClD,ICMkBK,MAAK,SAAAc,GACjBN,EAASM,EACX,IACA,MAEF,QACEN,EAAS,IAGf,GAAG,CAACG,IAEJ,IAAMU,EAAc,SAACC,GAGnB,OACIV,EAHeU,IAEGX,EAFHW,EAIH,GAClB,EAEA,OACEC,eAAA,OAAKC,UAAU,MAAKjC,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACEmC,KAAK,SACL,UAAQ,aACRH,MAAM,MACNI,QAAS,SAAAC,GAAK,OAAIN,EAAYM,EAAMC,cAAcN,MAAM,EAAC/B,SAC1D,mBAIDD,cAAA,UACEmC,KAAK,SACL,UAAQ,oBACRH,MAAM,OACNI,QAAS,SAAAC,GAAK,OAAIN,EAAYM,EAAMC,cAAcN,MAAM,EAAC/B,SAC1D,uBAIDD,cAAA,UACEmC,KAAK,SACL,UAAQ,aACRH,MAAM,MACNI,QAAS,SAAAC,GAAK,OAAIN,EAAYM,EAAMC,cAAcN,MAAM,EAAC/B,SAC1D,mBAIDD,cAACH,EAAS,CAACE,MAAOA,MAGxB,EChFAwC,IAASC,OACPxC,cAACa,EAAG,IACJ4B,SAASC,eAAe,Q","file":"static/js/main.a6956ef4.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good.id} data-cy=\"good\" style={{ color: good.color }}>\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods)\n    .then(goods => {\n      return goods.sort((a, b) => a.name.localeCompare(b.name))\n        .slice(0, 5);\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods)\n    .then(goods => {\n      return goods.filter(good => good.color === 'red');\n    });\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n// or\n// import * as goodsAPI from './api/goods';\n\ntype ListType = 'All' | 'Five' | 'Red' | '';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [listType, setListType] = useState<ListType>('');\n\n  useEffect(() => {\n    switch (listType) {\n      case ('All'):\n        getAll().then(List => {\n          setGoods(List);\n        });\n        break;\n\n      case ('Five'):\n        get5First().then(List => {\n          setGoods(List);\n        });\n        break;\n\n      case ('Red'):\n        getRedGoods().then(List => {\n          setGoods(List);\n        });\n        break;\n\n      default:\n        setGoods([]);\n        break;\n    }\n  }, [listType]);\n\n  const handleClick = (value: string) => {\n    const buttonType = value as ListType;\n\n    return buttonType !== listType\n      ? setListType(buttonType)\n      : setListType('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        value=\"All\"\n        onClick={event => handleClick(event.currentTarget.value)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        value=\"Five\"\n        onClick={event => handleClick(event.currentTarget.value)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        value=\"Red\"\n        onClick={event => handleClick(event.currentTarget.value)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}